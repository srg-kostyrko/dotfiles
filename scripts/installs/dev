#!/bin/bash

info 'Installing programming langs/environments'
    brew_it rbenv 
    brew_it ruby-build


    info "Configuring Ruby ..."
        find_latest_ruby() {
            rbenv install -l | grep -v - | tail -1 | sed -e 's/^ *//'
        }

        ruby_version="$(find_latest_ruby)"
        eval "$(rbenv init -)"
        export PATH="$HOME/.rbenv/bin:$PATH"
        if ! rbenv versions | grep -Fq "$ruby_version"; then
            rbenv install -s "$ruby_version"
        fi

        rbenv global "$ruby_version"
        rbenv shell "$ruby_version"
        gem update --system
        gem install bundler
        number_of_cores=$(sysctl -n hw.ncpu)
        bundle config --global jobs $((number_of_cores - 1))
        brew_it rbenv-default-gems
    ok 

    cask_it caskroom/versions/java8
    brew_it python
    brew_it python3
    brew_it lua --with-completion
    brew_it go
    brew_it rust
    brew_it leiningen
    brew_it nvm
    brew_it yarn
    brew_it node
    brew_it ocaml
    brew_it opam --without-aspcud
ok

info 'Installing dev tooling'
    brew_it ctags
    brew_it git-extras
    brew_it git-flow
    brew_it hub
    cask_it charles
    brew_it wireshark --with-qt5
    brew_it imagemagick --with-webp --with-ghostscript
    brew_it shellcheck
    brew_it heroku-toolbelt
    brew_it ipcalc
    brew_it dos2unix
    brew_it watchman
    brew_it stormssh
    cask_it docker
    brew_it awscli
    brew_it exa

    brew_it maven
    brew_it gradle
    cask_it android-sdk
    cask_it android-ndk

    brew_it gcc

    # mtr - ping & traceroute. best.
    brew_it mtr --no-gtk

    # allow mtr to run without sudo
    mtrlocation=$(brew info mtr | grep Cellar | sed -e 's/ (.*//') #  e.g. `/Users/paulirish/.homebrew/Cellar/mtr/0.86`
    sudo chmod 4755 "$mtrlocation/sbin/mtr"
    sudo chown root "$mtrlocation/sbin/mtr"
ok

info 'Installing editors...'
    brew_it vim --with-override-system-vi
    cask_it visual-studio-code
    cask_it android-studio
    cask_it intellij-idea-ce
    cask_it rstudio
    mas install 497799835
ok

codes=(
    formulahendry.auto-close-tag
    EditorConfig.EditorConfig
    PeterJausovec.vscode-docker
    akamud.vscode-caniuse
    cssho.vscode-svgviewer
    dbaeumer.vscode-eslint
    eg2.vscode-npm-script
    fknop.vscode-npm
    keyring.Lua
    lukehoban.Go
    James-Yu.latex-workshop
    msjsdiag.debugger-for-chrome
    qinjia.view-in-browser
    robertohuertasm.vscode-icons
    flowtype.flow-for-vscode
    saviorisdead.RustyCode
    sbrink.elm
    eamodio.gitlens
    christian-kohler.path-intellisense
    esbenp.prettier-vscode
    2gua.rainbow-brackets
    alefragnani.bookmarks
    lamartire.git-indicators
)

info "Installing VSCode plugins"
    for pkg in "${codes[@]}"; do
        code --install-extension "$pkg"
    done
ok

npms=(
    commitizen
    react-native-cli
    react-native-ignite
    create-react-app
    electron-forge
    caniuse-cmd
    diff-so-fancy
    ttystudio
)
for pkg in "${npms[@]}"; do
    npm i -g "$pkg"
done

gem install tmuxinator
