#!/bin/bash

info 'Installing programming langs/environments'
    brew_it rbenv 
    brew_it ruby-build


    info "Configuring Ruby ..."
        find_latest_ruby() {
            rbenv install -l | grep -v - | tail -1 | sed -e 's/^ *//'
        }

        ruby_version="$(find_latest_ruby)"
        eval "$(rbenv init -)"
        export PATH="$HOME/.rbenv/bin:$PATH"
        if ! rbenv versions | grep -Fq "$ruby_version"; then
            rbenv install -s "$ruby_version"
        fi

        rbenv global "$ruby_version"
        rbenv shell "$ruby_version"
        gem update --system
        gem install bundler
        number_of_cores=$(sysctl -n hw.ncpu)
        bundle config --global jobs $((number_of_cores - 1))
        brew_it rbenv-default-gems
    ok 

    cask_it java
    brew_it python
    brew_it python3
    brew_it node
    brew_it lua --with-completion
    brew_it go
    brew_it rust
    brew_it erlang
    brew_it leiningen
ok

info 'Installing dev tooling'
    brew_it ctags
    brew_it git-extras
    brew_it git-flow
    brew_it hub
    cask_it github-desktop
    brew_it chrome-cli
    brew_it redis
    brew_it mongodb
    brew_it elasticsearch
    cask_it charles
    brew_it wireshark --with-qt5
    brew_it imagemagick --with-webp --with-ghostscript
    brew_it shellcheck
    brew_it heroku-toolbelt
    brew_it ipcalc
    brew_it dos2unix

    # mtr - ping & traceroute. best.
    brew_it mtr --no-gtk

    # allow mtr to run without sudo
    mtrlocation=$(brew info mtr | grep Cellar | sed -e 's/ (.*//') #  e.g. `/Users/paulirish/.homebrew/Cellar/mtr/0.86`
    sudo chmod 4755 "$mtrlocation/sbin/mtr"
    sudo chown root "$mtrlocation/sbin/mtr"
ok

info 'Installing editors...'
    cask_it atom
    brew_it vim --with-override-system-vi
    cask_it macvim --custom-icons --with-override-system-vim --with-lua --with-luajit
    cask_it visual-studio-code
ok

info "Installing Atom plugins"
    apm install autocomplete-modules
    apm install autocomplete-paths
    apm install color-picker
    apm install editorconfig
    apm install file-icons
    apm install fonts
    apm install language-babel
    apm install linter
    apm install linter-eslint
    apm install merge-conflicts
    apm install pigments
    apm install emmet
    apm install git-blame
ok

codes=(
    EditorConfig.EditorConfig
    HookyQR.beautify
    PeterJausovec.vscode-docker
    akamud.vscode-caniuse
    alefragnani.project-manager
    cssho.vscode-svgviewer
    dbaeumer.vscode-eslint
    donjayamanne.bower
    donjayamanne.githistory
    donjayamanne.python
    eg2.vscode-npm-script
    fknop.vscode-npm
    keyring.Lua
    lukehoban.Go
    ms-vscode.latex
    msjsdiag.debugger-for-chrome
    qinjia.view-in-browser
    robertohuertasm.vscode-icons
    rtorr.vscode-flow
    saviorisdead.RustyCode
    sbrink.elm
    waderyan.gitblame
)

info "Installing VSCode plugins"
    for pkg in "${codes[@]}"; do
        code --install-extension "$pkg"
    done
ok

npms=(
    babel-cli
    bower
    grunt-cli
    grunt-init
    gulp-cli
    node-inspector
    yo
    babel-eslint
    commitizen
    eslint
    eslint-plugin-flowtype
    eslint-plugin-import
    eslint-plugin-jsx-a11y
    eslint-plugin-react
    trash-cli
    git-open
    git-recent
    diff-so-fancy
    gulp.plugin.zsh
)

for pkg in "${npms[@]}"; do
    npm i -g "$pkg"
done

gem install tmuxinator
